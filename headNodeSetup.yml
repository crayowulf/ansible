---
#set up the head node in the cluster
- name: Setup head node
  hosts: headNode
  gather_facts: no
  remote_user: nvidia
  become: yes
  become_method: sudo
  become_user: root

  tasks:
    - name: make sure sshd settings are correct.
      template: src=/home/nvidia/files/head/sshd_config dest=/etc/ssh/sshd_config

    - name: make sure iptables rules are in place
      template: src=/home/nvidia/files/head/iptables.rules dest=/etc/iptables/rules.v4

    - name: Ensure iptables-persistent is installed
      apt:
        name: iptables-persistent
        state: installed

    - name: disable wifi
      command: nmcli radio wifi off

    - name: put jetson in high performance mode
      command: nvpmodel -m 0

    - name: Create /home2
      file:
        path: /home2
        state: directory
        mode: "u=rwx,g=rx,o=rx"

     #set hostname
    - hostname:
        name: headNode

#    - name: Update package lists (equivalent to apt-get update)
#      apt:
#        update_cache: yes

#    - name: Install available upgrades (equivalent to apt-get dist-upgrade)
#      apt:
#        upgrade: dist

    - name: Assign IP addresses to interfaces
      template: src=/home/nvidia/files/head/interfaces dest=/etc/network/interfaces

    - name: Ensure isc-dhcp-server is installed
      apt:
        name: isc-dhcp-server
        state: installed

    - name: Ensure dnsmasq is installed
      apt:
        name: dnsmasq
        state: installed

    - name: Place dhcpd.conf.  This file assigns ip addrs.
      template: src=/home/nvidia/files/head/dhcpd.conf dest=/etc/dhcp/dhcpd.conf

    - name: Place isc-dhcp-server.  This file tells isc-dhcp-server to only listen on eth1.
            # prevents you from running a dhcp server on your campus network.
      template: src=/home/nvidia/files/head/isc-dhcp-server dest=/etc/default/isc-dhcp-server

    - name: Enable IP Masquerading
      template: src=/home/nvidia/files/head/rc.local dest=/etc/rc.local

    - name: Restart isc-dhcp-server service
      service: name=isc-dhcp-server state=restarted

    - name: Place dnsmasq.conf.  This file tells dnsmasq to only listen on eth1.
      template: src=/home/nvidia/files/head/dnsmasq.conf dest=/etc/dnsmasq.conf

    - name: Place hosts file.  This file is used by dnsmasq to assign names to ip addresses
      template: src=/home/nvidia/files/head/hosts dest=/etc/hosts

    - name: Ensure rpcbind is installed (needed for NIS)
      apt:
        name: rpcbind
        state: installed

    - name: Ensure NIS is installed
      apt:
        name: nis
        state: installed

    - name: Place /etc/default/nis
      template: src=/home/nvidia/files/head/nis dest=/etc/default/nis

    - name: Place /etc/ypserv.securenets
      template: src=/home/nvidia/files/head/ypserv.securenets dest=/etc/ypserv.securenets

    - name: Place /etc/yp.conf
      template: src=/home/nvidia/files/common/yp.conf dest=/etc/yp.conf

    - name: Place /var/yp/Makefile
      template: src=/home/nvidia/files/head/Makefile_NIS dest=/var/yp/Makefile

    - name: set timezone to America/Detroit
      timezone:
        name: America/Detroit

    - name: Ensure ntp is installed
      apt:
        name: ntp
        state: installed

    - name: Place /etc/ntp.conf
      template: src=/home/nvidia/files/head/ntp.conf dest=/etc/ntp.conf

    - name: Restart NTP service
      service: name=ntp state=restarted

    - name: Ensure nfs-kernel-server is installed
      apt:
        name: nfs-kernel-server
        state: installed

    - name: Place /etc/exports
      template: src=/home/nvidia/files/head/exports dest=/etc/exports

    - name: Place /etc/fstab
      template: src=/home/nvidia/files/head/fstab dest=/etc/fstab

    # steps after this might fail if a reboot is not performed.
    - name: Ensure rsh-redone-client is installed
      apt:
        name: rsh-redone-client
        state: installed

    - name: Ensure rsh-redone-server is installed
      apt:
        name: rsh-redone-server
        state: installed

    - name: Place /home/nvidia/.rhosts
      template: src=/home/nvidia/files/common/.rhosts dest=/home/nvidia/.rhosts owner=nvidia group=nvidia

# create directory to store .deb files that ansible needs to access (e.g. openmpi).
    - name: Create /home2/shared_install_files
      file:
        path: /home2/shared_install_files
        state: directory
        mode: "u=rwx,g=rx,o=rx"

    - name: Place /etc/openmpi/openmpi-mca-params.conf  (Open MPI settings)
      template: src=/home/nvidia/files/common/openmpi-mca-params.conf dest=/etc/openmpi/openmpi-mca-params.conf

    - name: Place /etc/openmpi/openmpi-default-hostfile  (Hosts available for Open MPI jobs)
      template: src=/home/nvidia/files/common/openmpi-default-hostfile dest=/etc/openmpi/openmpi-default-hostfile

    - name: Ensure libopenblas-dev is installed (Prerequisite for CUDA-Enabled HPL Benchmark)
      apt:
        name: libopenblas-dev
        state: installed

    - name: Place /etc/openmpi/openmpi-mca-params.conf  (Open MPI settings)
      template: src=/home/nvidia/files/common/openmpi-mca-params.conf dest=/etc/openmpi/openmpi-mca-params.conf

    - name: Place /etc/openmpi/openmpi-default-hostfile  (Hosts available for Open MPI jobs)
      template: src=/home/nvidia/files/common/openmpi-default-hostfile dest=/etc/openmpi/openmpi-default-hostfile

    - name: Ensure csh is installed (prerequisite for building NAMD)
      apt:
        name: csh
        state: present

    - name: set permissions on home directory on nfs share
      file:
        path: /home2/ben/
        state: directory
        mode: "u=rwx,g=rx,o=rx"

    - name: set permissions on .ssh in home directory on nfs
      file:
        path: /home2/ben/.ssh
        state: directory
        mode: "u=rwx,g=,o="

    - name: set permissions on .ssh/authorized_keys in home directory on nfs
      file:
        path: /home2/ben/.ssh/authorized_keys
        state: file
        mode: "u=rw,g=,o="

    - name: Create /home2/bin (Shared executable files, e.g. VMD and NAMD)
      file:
        path: /home2/bin
        state: directory
        owner: ben
        mode: "u=rwx,g=rx,o=rx"

    - name: Ensure arduino is installed
      apt:
        name: arduino
        state: present

    - name: Ensure sysstat is installed
      apt:
        name: sysstat
        state: present

    - name: Ensure lm-sensors is installed
      apt:
        name: lm-sensors
        state: present

    - name: Ensure gtk-recordmydesktop is installed (record the screen for presentations)
      apt:
        name: gtk-recordmydesktop
        state: present
